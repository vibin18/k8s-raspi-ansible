[Unit]
Description="k8s api-server"
After=etcd.service
Requires=etcd.service
{% for server in servers %}
[Service]
TimeoutStartSec=0
ExecStartPre=-/usr/bin/docker kill kube-apiserver
ExecStartPre=-/usr/bin/docker rm kube-apiserver
ExecStartPre=/usr/bin/docker pull {{ api.image }}:{{ api.version }}
ExecStart=/usr/bin/docker run --name kube-apiserver {{ etcd.image }}:{{ etcd.version}} \
      /usr/local/bin/etcd  --bind-address {{ hostvars[server]['ansible_host'] }} --allow-privileged false --alsologtostderr --anonymous-auth false \
      --apiserver-count 1 --authorization-mode RBAC,Node --enable-admission-plugins AlwaysAdmit,AlwaysPullImages,CertificateApproval,CertificateSigning, \
      ServiceAccount,StorageObjectInUseProtection,TaintNodesByCondition,ValidatingAdmissionWebhook \
      --etcd-servers http://{{ hostvars[server]['ansible_host'] }}:2379 --kubelet-certificate-authority /opt/k8s/certs/ca-cert.crt \
      --kubelet-client-certificate /opt/k8s/certs/kube00.crt --kubelet-client-key /opt/k8s/certs/node.pem \
      --secure-port 443 --tls-cert-file /opt/k8s/certs/server-cert.crt --tls-private-key-file /opt/k8s/certs/server-key.pem 
{% endfor %}
[Install]
WantedBy=multi-user.target