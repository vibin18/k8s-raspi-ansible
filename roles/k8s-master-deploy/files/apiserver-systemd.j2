[Unit]
Description="k8s api-server"
After=etcd.service
Requires=etcd.service
{% for server in servers %}
[Service]
TimeoutStartSec=0
ExecStartPre=-/usr/bin/docker kill kube-apiserver
ExecStartPre=-/usr/bin/docker rm kube-apiserver
ExecStartPre=/usr/bin/docker pull {{ api.image }}:{{ api.version }}
ExecStart=/usr/bin/docker run --net=host -v {{ api.volume }}:{{ api.volume }}:ro --name kube-apiserver {{ api.image }}:{{ api.version}} \
/usr/local/bin/kube-apiserver --bind-address={{ hostvars[server]['ansible_host'] }} --allow-privileged=false --anonymous-auth=false \
--apiserver-count=1 --authorization-mode=Node,RBAC --enable-admission-plugins=AlwaysAdmit,AlwaysPullImages,CertificateApproval,CertificateSigning,ServiceAccount,StorageObjectInUseProtection,TaintNodesByCondition,ValidatingAdmissionWebhook \
--etcd-servers=http://{{ hostvars[server]['ansible_host'] }}:2379 --kubelet-certificate-authority={{ api.volume }}ca-cert.crt \
--kubelet-client-certificate={{ api.volume }}kube-apiserver-kubelet-client.crt --kubelet-client-key={{ api.volume }}kube-apiserver-kubelet-client.pem --service-cluster-ip-range 192.168.0.0/16 \
--secure-port=443 --tls-cert-file={{ api.volume }}server-cert.crt --tls-private-key-file={{ api.volume }}server-key.pem
{% endfor %}
[Install]
WantedBy=multi-user.target