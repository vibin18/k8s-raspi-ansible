- name: Generating systemd for kube-apiserver daemon || master deploy.
  vars:
    servers: "{{ groups['k8s_masters'] }}"
    api:
      version: v1.19.0-rc.1
      volume: '/opt/k8s/certs/'
      authVolume: '/opt/k8s/api-confs/'
      image: 'gcr.io/google-containers/kube-apiserver-amd64'
  template:
    src: "{{ role_path }}/files/apiserver-systemd.j2"
    dest: "/etc/systemd/system/kube-apiserver.service"
    owner: root
    group: root

- name: Generating systemd for kube-scheduler daemon || master deploy.
  vars:
    servers: "{{ groups['k8s_masters'] }}"
    api:
      version: v1.19.0-rc.1
      volume: '/opt/k8s/certs/'
      authVolume: '/opt/k8s/api-confs/'
      image: 'gcr.io/google-containers/kube-scheduler-amd64'
  template:
    src: "{{ role_path }}/files/scheduler-systemd.j2"
    dest: "/etc/systemd/system/kube-scheduler.service"
    owner: root
    group: root

- name: Generating systemd for kube-controller daemon || master deploy.
  vars:
    servers: "{{ groups['k8s_masters'] }}"
    api:
      version: v1.19.0-rc.1
      volume: '/opt/k8s/certs/'
      authVolume: '/opt/k8s/api-confs/'
      image: 'gcr.io/google-containers/kube-controller-manager-amd64'
  template:
    src: "{{ role_path }}/files/controller-manager-systemd.j2"
    dest: "/etc/systemd/system/kube-controller.service"
    owner: root
    group: root

- name: Reloading systemd || master deploy.
  systemd:
    daemon_reload: yes

